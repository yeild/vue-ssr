const webpack = require('webpack')
const middleware = require('webpack-dev-middleware')

const clientConfig = require('./config/webpack.client')
const serverConfig = require('./config/webpack.server')

/*
clientConfig.entry.app = ['webpack-hot-middleware/client', clientConfig.entry.app]
clientConfig.output.filename = '[name].js'
clientConfig.plugins.push(
  new webpack.HotModuleReplacementPlugin(),
  new webpack.NoEmitOnErrorsPlugin()
)
*/

const clientCompiler = webpack(clientConfig)
const serverCompiler = webpack(serverConfig)

let bundle
serverCompiler.watch({}, (err, stats) => {
  if (err) throw err
  stats = stats.toJson()
  if (stats.errors.length) return

  // read bundle generated by vue-ssr-webpack-plugin
  bundle = JSON.parse('vue-ssr-server-bundle.json')
  update()
})


module.exports = function (app) {
  app.use(middleware(clientCompiler,{
    publicPath: clientConfig.output.publicPath,
  }))

}